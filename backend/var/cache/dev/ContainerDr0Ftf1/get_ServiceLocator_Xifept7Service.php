<?php

namespace ContainerDr0Ftf1;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_Xifept7Service extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.Xifept7' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.Xifept7'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.zHyJIs5.kernel::registerContainerConfiguration()', 'get_ServiceLocator_ZHyJIs5_KernelregisterContainerConfigurationService', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.zHyJIs5.kernel::registerContainerConfiguration()', 'get_ServiceLocator_ZHyJIs5_KernelregisterContainerConfigurationService', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.zHyJIs5.kernel::loadRoutes()', 'get_ServiceLocator_ZHyJIs5_KernelloadRoutesService', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.zHyJIs5.kernel::loadRoutes()', 'get_ServiceLocator_ZHyJIs5_KernelloadRoutesService', true],
            'App\\Controller\\ApiController::test' => ['privates', '.service_locator.5FanY8e.App\\Controller\\ApiController::test()', 'getApiControllertestService', true],
            'App\\Controller\\ApiController::protectedAction' => ['privates', '.service_locator.YOUPp1C.App\\Controller\\ApiController::protectedAction()', 'getApiControllerprotectedActionService', true],
            'App\\Controller\\ExchangeController::new' => ['privates', '.service_locator.ba3.KOO.App\\Controller\\ExchangeController::new()', 'getExchangeControllernewService', true],
            'App\\Controller\\ExchangeController::getMyExchanges' => ['privates', '.service_locator.egipcEH.App\\Controller\\ExchangeController::getMyExchanges()', 'getExchangeControllergetMyExchangesService', true],
            'App\\Controller\\ExchangeController::acceptExchange' => ['privates', '.service_locator.ba3.KOO.App\\Controller\\ExchangeController::acceptExchange()', 'getExchangeControlleracceptExchangeService', true],
            'App\\Controller\\ExchangeController::rejectExchange' => ['privates', '.service_locator.ba3.KOO.App\\Controller\\ExchangeController::rejectExchange()', 'getExchangeControllerrejectExchangeService', true],
            'App\\Controller\\ImagesController::updateItemImages' => ['privates', '.service_locator.axWvN5H.App\\Controller\\ImagesController::updateItemImages()', 'getImagesControllerupdateItemImagesService', true],
            'App\\Controller\\ItemController::items' => ['privates', '.service_locator.fld4FZ4.App\\Controller\\ItemController::items()', 'getItemControlleritemsService', true],
            'App\\Controller\\ItemController::new' => ['privates', '.service_locator.egipcEH.App\\Controller\\ItemController::new()', 'getItemControllernewService', true],
            'App\\Controller\\ItemController::relatedItems' => ['privates', '.service_locator.fld4FZ4.App\\Controller\\ItemController::relatedItems()', 'getItemControllerrelatedItemsService', true],
            'App\\Controller\\ItemController::myItems' => ['privates', '.service_locator.fld4FZ4.App\\Controller\\ItemController::myItems()', 'getItemControllermyItemsService', true],
            'App\\Controller\\ItemController::show' => ['privates', '.service_locator.oTFA6TM.App\\Controller\\ItemController::show()', 'getItemControllershowService', true],
            'App\\Controller\\ItemController::edit' => ['privates', '.service_locator.yb1ro4H.App\\Controller\\ItemController::edit()', 'getItemControllereditService', true],
            'App\\Controller\\ItemController::delete' => ['privates', '.service_locator.yb1ro4H.App\\Controller\\ItemController::delete()', 'getItemControllerdeleteService', true],
            'App\\Controller\\NotificationController::getNotifications' => ['privates', '.service_locator.IZrDbAW.App\\Controller\\NotificationController::getNotifications()', 'getNotificationControllergetNotificationsService', true],
            'App\\Controller\\RegistrationController::register' => ['privates', '.service_locator.tEL1pRK.App\\Controller\\RegistrationController::register()', 'getRegistrationControllerregisterService', true],
            'App\\Controller\\UserController::getProfile' => ['privates', '.service_locator.GL345QQ.App\\Controller\\UserController::getProfile()', 'getUserControllergetProfileService', true],
            'App\\Controller\\UserController::updateProfile' => ['privates', '.service_locator.Kq27LHM.App\\Controller\\UserController::updateProfile()', 'getUserControllerupdateProfileService', true],
            'App\\Controller\\UserController::updateProfileImage' => ['privates', '.service_locator.axWvN5H.App\\Controller\\UserController::updateProfileImage()', 'getUserControllerupdateProfileImageService', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.zHyJIs5.kernel::registerContainerConfiguration()', 'get_ServiceLocator_ZHyJIs5_KernelregisterContainerConfigurationService', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.zHyJIs5.kernel::loadRoutes()', 'get_ServiceLocator_ZHyJIs5_KernelloadRoutesService', true],
            'App\\Controller\\ApiController:test' => ['privates', '.service_locator.5FanY8e.App\\Controller\\ApiController::test()', 'getApiControllertestService', true],
            'App\\Controller\\ApiController:protectedAction' => ['privates', '.service_locator.YOUPp1C.App\\Controller\\ApiController::protectedAction()', 'getApiControllerprotectedActionService', true],
            'App\\Controller\\ExchangeController:new' => ['privates', '.service_locator.ba3.KOO.App\\Controller\\ExchangeController::new()', 'getExchangeControllernewService', true],
            'App\\Controller\\ExchangeController:getMyExchanges' => ['privates', '.service_locator.egipcEH.App\\Controller\\ExchangeController::getMyExchanges()', 'getExchangeControllergetMyExchangesService', true],
            'App\\Controller\\ExchangeController:acceptExchange' => ['privates', '.service_locator.ba3.KOO.App\\Controller\\ExchangeController::acceptExchange()', 'getExchangeControlleracceptExchangeService', true],
            'App\\Controller\\ExchangeController:rejectExchange' => ['privates', '.service_locator.ba3.KOO.App\\Controller\\ExchangeController::rejectExchange()', 'getExchangeControllerrejectExchangeService', true],
            'App\\Controller\\ImagesController:updateItemImages' => ['privates', '.service_locator.axWvN5H.App\\Controller\\ImagesController::updateItemImages()', 'getImagesControllerupdateItemImagesService', true],
            'App\\Controller\\ItemController:items' => ['privates', '.service_locator.fld4FZ4.App\\Controller\\ItemController::items()', 'getItemControlleritemsService', true],
            'App\\Controller\\ItemController:new' => ['privates', '.service_locator.egipcEH.App\\Controller\\ItemController::new()', 'getItemControllernewService', true],
            'App\\Controller\\ItemController:relatedItems' => ['privates', '.service_locator.fld4FZ4.App\\Controller\\ItemController::relatedItems()', 'getItemControllerrelatedItemsService', true],
            'App\\Controller\\ItemController:myItems' => ['privates', '.service_locator.fld4FZ4.App\\Controller\\ItemController::myItems()', 'getItemControllermyItemsService', true],
            'App\\Controller\\ItemController:show' => ['privates', '.service_locator.oTFA6TM.App\\Controller\\ItemController::show()', 'getItemControllershowService', true],
            'App\\Controller\\ItemController:edit' => ['privates', '.service_locator.yb1ro4H.App\\Controller\\ItemController::edit()', 'getItemControllereditService', true],
            'App\\Controller\\ItemController:delete' => ['privates', '.service_locator.yb1ro4H.App\\Controller\\ItemController::delete()', 'getItemControllerdeleteService', true],
            'App\\Controller\\NotificationController:getNotifications' => ['privates', '.service_locator.IZrDbAW.App\\Controller\\NotificationController::getNotifications()', 'getNotificationControllergetNotificationsService', true],
            'App\\Controller\\RegistrationController:register' => ['privates', '.service_locator.tEL1pRK.App\\Controller\\RegistrationController::register()', 'getRegistrationControllerregisterService', true],
            'App\\Controller\\UserController:getProfile' => ['privates', '.service_locator.GL345QQ.App\\Controller\\UserController::getProfile()', 'getUserControllergetProfileService', true],
            'App\\Controller\\UserController:updateProfile' => ['privates', '.service_locator.Kq27LHM.App\\Controller\\UserController::updateProfile()', 'getUserControllerupdateProfileService', true],
            'App\\Controller\\UserController:updateProfileImage' => ['privates', '.service_locator.axWvN5H.App\\Controller\\UserController::updateProfileImage()', 'getUserControllerupdateProfileImageService', true],
        ], [
            'kernel::registerContainerConfiguration' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'kernel::loadRoutes' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Controller\\ApiController::test' => '?',
            'App\\Controller\\ApiController::protectedAction' => '?',
            'App\\Controller\\ExchangeController::new' => '?',
            'App\\Controller\\ExchangeController::getMyExchanges' => '?',
            'App\\Controller\\ExchangeController::acceptExchange' => '?',
            'App\\Controller\\ExchangeController::rejectExchange' => '?',
            'App\\Controller\\ImagesController::updateItemImages' => '?',
            'App\\Controller\\ItemController::items' => '?',
            'App\\Controller\\ItemController::new' => '?',
            'App\\Controller\\ItemController::relatedItems' => '?',
            'App\\Controller\\ItemController::myItems' => '?',
            'App\\Controller\\ItemController::show' => '?',
            'App\\Controller\\ItemController::edit' => '?',
            'App\\Controller\\ItemController::delete' => '?',
            'App\\Controller\\NotificationController::getNotifications' => '?',
            'App\\Controller\\RegistrationController::register' => '?',
            'App\\Controller\\UserController::getProfile' => '?',
            'App\\Controller\\UserController::updateProfile' => '?',
            'App\\Controller\\UserController::updateProfileImage' => '?',
            'kernel:registerContainerConfiguration' => '?',
            'kernel:loadRoutes' => '?',
            'App\\Controller\\ApiController:test' => '?',
            'App\\Controller\\ApiController:protectedAction' => '?',
            'App\\Controller\\ExchangeController:new' => '?',
            'App\\Controller\\ExchangeController:getMyExchanges' => '?',
            'App\\Controller\\ExchangeController:acceptExchange' => '?',
            'App\\Controller\\ExchangeController:rejectExchange' => '?',
            'App\\Controller\\ImagesController:updateItemImages' => '?',
            'App\\Controller\\ItemController:items' => '?',
            'App\\Controller\\ItemController:new' => '?',
            'App\\Controller\\ItemController:relatedItems' => '?',
            'App\\Controller\\ItemController:myItems' => '?',
            'App\\Controller\\ItemController:show' => '?',
            'App\\Controller\\ItemController:edit' => '?',
            'App\\Controller\\ItemController:delete' => '?',
            'App\\Controller\\NotificationController:getNotifications' => '?',
            'App\\Controller\\RegistrationController:register' => '?',
            'App\\Controller\\UserController:getProfile' => '?',
            'App\\Controller\\UserController:updateProfile' => '?',
            'App\\Controller\\UserController:updateProfileImage' => '?',
        ]);
    }
}
